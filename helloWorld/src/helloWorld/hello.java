package helloWorld;

import java.io.Console;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeSet;
import java.util.concurrent.ArrayBlockingQueue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;

import eman.study.Calculate;
import eman.study.Car;
import eman.phone.Samsung;
import eman.person.Person;
import eman.phone.Iphone;
import eman.phone.Phone;
import eman.house.House;
import eman.person.Jason;

public class hello {
	public static void main(String[] args) {
		int x=5, y=0, z;
		z = x/y;
		
		
		
 
	}
}
interface Lamda {
	abstract public void demo();
 
}
interface Lambda {
	public void print();
	
}
	
	class Brackets {

		synchronized public void generate(int threadNumber) {
			for (int i = 1; i <= 10; i++) {
				if (i <= 5) {
					System.out.print("[");
				} else {
					System.out.print("]");
				}
			}
			System.out.print("Generated by thread" + threadNumber);
			System.out.println();
		}

	}

	class myObj<K, V> {
		K o1;
		V o2;

		public myObj(K k, V v) {

			this.o1 = k;
			this.o2 = v;
		}

		public K getO1() {
			return o1;
		}

		public V getO2() {
			return o2;
		}

		@Override
		public String toString() {
			return "myObj [o1=" + o1 + ", o2=" + o2 + "]";
		}

	}

	class Lip {
		private static int x;

		public static int getX() {
			return x;
		}

		public static void setX(int x) {
			Lip.x = x;
			s.print();
		}

		public static class s {
			public static void print() {
				System.out.println("BURNA" + x);
			}
		}
	}

	class A {
		protected String s;

		protected String[] p = new String[10];

		public A(String[] s) {
			this.p = s;
		}

		public String getS() {
			return s;
		}

		public String[] getP() {
			return p;
		}

	}

	class B extends A {
		@Override
		public String toString() {
			return "B [m=" + m + ", s=" + s + ", p=" + Arrays.toString(p) + ", getS()=" + getS() + ", getP()="
					+ Arrays.toString(getP()) + "]";
		}

		public B(String[] s) {
			super(s);
		}

		public String m;

	}

class C {
	public String o;
}
